name: Release CLI
on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: stable
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5.0.0
        with:
          distribution: goreleaser
          version: ${{ env.GITHUB_REF_NAME }}
          args: release --clean
          workdir: ./
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
# jobs:
#   releases-matrix:
#     name: Release Go Binary
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
#         goos: [linux, windows, darwin]
#         goarch: ["386", amd64, arm64]
#         exclude:
#           - goarch: "386"
#             goos: darwin
#           - goarch: arm64
#             goos: windows
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 0
#       - name: Set up Go
#         uses: actions/setup-go@v5
#         with:
#           go-version: stable
#       - name: Run GoReleaser
#         uses: goreleaser/goreleaser-action@v5
#         with:
#           distribution: goreleaser
#           version: latest
#           args: release --clean
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
